# Restore old style debuginfo creation for rpm >= 4.14.
%undefine _debugsource_packages
%undefine _debuginfo_subpackages

# -*- rpm-spec -*-
BuildRoot:      %_topdir/@CPACK_PACKAGE_FILE_NAME@
Summary:        @CPACK_RPM_PACKAGE_SUMMARY@
Name:           @CPACK_RPM_PACKAGE_NAME@
Version:        @CPACK_RPM_PACKAGE_VERSION@
Release:        @CPACK_RPM_PACKAGE_RELEASE@
License:        @CPACK_RPM_PACKAGE_LICENSE@
Group:          @CPACK_RPM_PACKAGE_GROUP@
Vendor:         @CPACK_RPM_PACKAGE_VENDOR@

@TMP_RPM_SOURCE@
@TMP_RPM_BUILD_REQUIRES@
@TMP_RPM_BUILDARCH@
@TMP_RPM_PREFIXES@

@TMP_RPM_DISABLE_DEBUGINFO@

%define _rpmdir %_topdir/RPMS
%define _srcrpmdir %_topdir/SRPMS
%define test_spec_in test_spec_value

@FILE_NAME_DEFINE@
%define _unpackaged_files_terminate_build 0
@TMP_RPM_SPEC_INSTALL_POST@
@TMP_RPM_REQUIRES_EXCLUDE_FROM@
@CPACK_RPM_SPEC_MORE_DEFINE@
@CPACK_RPM_COMPRESSION_TYPE_TMP@

%description
@CPACK_RPM_PACKAGE_DESCRIPTION@

# This is a shortcutted spec file generated by CMake RPM generator
# we skip _install step because CPack does that for us.
# We do only save CPack installed tree in _prepr
# and then restore it in build.
%prep
@TMP_RPM_PREP@

%build
mkdir cpack_rpm_build_dir
cd cpack_rpm_build_dir

# We rely on a newer cmake than is on RHEL 9. This scripts grabs
# a newer version if needed.
../@CPACK_PACKAGE_FILE_NAME@/infra/scripts/bootstrap_cmake.sh
if [ -f cmake/bin/cmake ]; then
   alias cmake=cmake/bin/cmake
   alias cpack=cmake/bin/cpack
fi

cmake --version
cmake @CPACK_RPM_SOURCE_PKG_BUILD_PARAMS@ -DCPACK_PACKAGING_INSTALL_PREFIX=/usr ../@CPACK_PACKAGE_FILE_NAME@
make %{?_smp_mflags} 
#p build

%install
@TMP_RPM_INSTALL@

%clean

%changelog
@CPACK_RPM_SPEC_CHANGELOG@
