# Hestia Service Configuration File

# MIT License

# Copyright (c) 2023 Irish Centre for High End Computing (ICHEC), University of Galway, Ireland

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Configuration settings for Hestia's logging behaviour
logger:
  active: true 
  syslog_only: true # Disable for file-based logging rather than system journal
  level: warn # Possible values [debug, info, warn, error]
  # console_only: true # Use for in-console server debugging  

# How this node's server will behave
server:
  controller: true # For Hestia controllers and standalone servers
  tag: controller0
  
  # For Hestia worker nodes
  # controller: false
  # controller_address: hestia_controller:8080
  # tag: worker0

  host_address: 127.0.0.1
  host_port: 8080
  
  web_app: hestia::HsmService

  backend: hestia::Basic # Http server backend used by node

# Web interfaces provided by node
web_apps:
  - identitifier: hestia::HsmService
    interface: http
  # S3 Interface
  # - identitifier: hestia::HsmServiceS3
  #   interface: s3

# Http servers available on node
server_backends:
  - identifier: hestia::Basic

# Tier specification (how many tiers to register, not all need to be used for proper function)
tiers:
  - name: "0"
  - name: "1"
  - name: "2"
  - name: "3"
  - name: "4"

# Tier backend specification (for standalone servers and worker nodes)
object_store_backends:
  - type: file_hsm # Type of backend (Hestia's HSM POSIX backend)
    tier_names: ["0", "1", "2", "3", "4"] # Tiers to register the backend with
    config: # Backend-Specific configuration 
      root: hsm_object_store # Object store root on filesystem
  # - type: file # Similar to hsm but one tier
  #   config:
  #     root: object_store
  # - type: s3 # An S3 bucket-based backend
  # - type: phobos # CEA's Phobos backend (tape storage) 
  # - type: motr # Seagate's Motr backend (heterogeneous hsm object store)

# The key-value store this node will use (if the controller/standalone server)
key_value_store_client:
  client_type: file # [file, memory, kvsal, redis]

# Redis KV store options
#   - Needs a running redis instance at backend_address:backend_port
# key_value_store_client:
#   client_type: redis
#   config:
#     backend_address: localhost
#     backend_port: 6379

# Hestia event feed configuration options (for interoperability with CEA's Robinhood)
#   - Worker nodes use the controller node's event feed
event_feed:
  event_feed_path: event_feed.yaml # Output path
  active: true