cmake_minimum_required(VERSION 3.24)

set(CMAKE_PROJECT_VERSION "0.0.0" CACHE STRING "Project Version")
if(CMAKE_PROJECT_VERSION MATCHES "")
  project(hestia VERSION "0.0.0" LANGUAGES C CXX)
else()
  project(hestia VERSION ${CMAKE_PROJECT_VERSION} LANGUAGES C CXX)

message(STATUS "Hestia Version: " ${CMAKE_PROJECT_VERSION})

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
add_compile_options(-fstack-protector)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/infra/cmake)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# This is for warnings coming from third-party libraries coming from FetchContent
set(CMAKE_WARN_DEPRECATED OFF CACHE BOOL "" FORCE)

include(GNUInstallDirs)
set(CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})

option(BUILD_SHARED_LIBS "Build Shared libraries." OFF)
option(HESTIA_BUILD_TESTS "Build Hestia tests." OFF)
option(HESTIA_WITH_PHOBOS "Build Phobos Object Store Integration." OFF)
option(HESTIA_WITH_MOTR "Build the Cortx Motr Integration." OFF)

option(HESTIA_USE_SRC_RPM_SPEC "Turn on when generating an SRPM." OFF)

add_subdirectory(src)
add_subdirectory(bindings)

include(CTest)
if(${HESTIA_BUILD_TESTS})
  option(HESTIA_TEST_REDIS "Test the Redis key-value store backend (requires Redis server)" OFF)
  add_subdirectory(test)
endif()

# This skips adding these targets if we are included by another project
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
option(HESTIA_BUILD_DOCUMENTATION "Build Documentation. Depends on Doxygen." OFF)
if(HESTIA_BUILD_DOCUMENTATION)
  add_subdirectory(doc)
endif()

include(DoStaticAnalysis)
  add_clang_format()
  add_clang_tidy()
endif()

# Platform specific setting tweaks
if(APPLE)
  if(${HESTIA_WITH_PHOBOS})
    message(WARNING "Phobos is not buildable on Mac, turning off.")
  endif()
  set(HESTIA_WITH_PHOBOS OFF) # Phobos can't be built on Mac
else()
  if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "Install Prefix" FORCE)
  endif()
endif()
include(DoPackaging)
